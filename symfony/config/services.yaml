# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration


parameters:
    app.service.test: 'test'
    app.password: '%env(DATABASE_PASSWORD)%'
#        router.request_context.scheme: 'https'
#        asset.request_context.secure: true
    # file /var/cache/dev/App_KernelDevDebugContainer.php
    # хэш содержимого всех ваших исходных файлов;
    # container.build_hash: 'nameHash'
    # временная метка момента сборки контейнера (результат выполнения PHP- функции времени );
    # container.build_time: 123321423
    # результат слияния двух предыдущих параметров и кодирования результата с помощью CRC32.
    # container.build_id: 'nameId'
    # установить для него неизменное время сборки, чтобы добиться строго воспроизводимой сборки:
    # kernel.container_build_time: 123321423


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
        bind:
            $adminSms: 'manager@example.com'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller/'
        tags: [ 'controller.service_arguments' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    generator.true:
        '@App\Infrastructure\Controller\Router\PriceController'

    App\Infrastructure\Controller\Router\ProductController:
        tags: [ 'controller.service_arguments' ]
        calls:
            - setLogger: [ '@logger' ]
        arguments:
            $adminEmail: '@generator.true'

    App\Infrastructure\Base\AbstractBaseRepository:
        autowire: false


    # listener
    App\Infrastructure\EventListener\ControllerArguments:
        tags:
            - { name: kernel.event_listener, event: kernel.controller_arguments }

    App\Infrastructure\EventListener\Requestlistener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
